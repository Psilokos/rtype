main.cpp: In function ‘void ConnectionLoop(entity_component_system::database::IDataBase&)’:
main.cpp:19:35: error: expected type-specifier
   ecs::system::Connection con(new network::UDPSocket());
                                   ^~~~~~~
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional: In instantiation of ‘struct std::_Bind_simple<void (*(entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >))(entity_component_system::database::IDataBase&)>’:
/usr/include/c++/6.2.1/thread:137:26:   required from ‘std::thread::thread(_Callable&&, _Args&& ...) [with _Callable = void (&)(entity_component_system::database::IDataBase&); _Args = {entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >&}]’
main.cpp:29:36:   required from here
/usr/include/c++/6.2.1/functional:1374:61: error: no type named ‘type’ in ‘class std::result_of<void (*(entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >))(entity_component_system::database::IDataBase&)>’
       typedef typename result_of<_Callable(_Args...)>::type result_type;
                                                             ^~~~~~~~~~~
/usr/include/c++/6.2.1/functional:1395:9: error: no type named ‘type’ in ‘class std::result_of<void (*(entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >))(entity_component_system::database::IDataBase&)>’
         _M_invoke(_Index_tuple<_Indices...>)
         ^~~~~~~~~
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple: In instantiation of ‘constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >; long unsigned int _Idx = 1ul; _Head = entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >]’:
/usr/include/c++/6.2.1/tuple:368:49:   required from ‘constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head>&&) [with long unsigned int _Idx = 1ul; _Head = entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >]’
/usr/include/c++/6.2.1/type_traits:1188:12:   required from ‘struct std::__is_nt_constructible_impl<std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >, std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >&&>’
/usr/include/c++/6.2.1/type_traits:143:12:   required from ‘struct std::__and_<std::is_constructible<std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >, std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >&&>, std::__is_nt_constructible_impl<std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >, std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >&&> >’
/usr/include/c++/6.2.1/type_traits:1200:12:   required from ‘struct std::is_nothrow_constructible<std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >, std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >&&>’
/usr/include/c++/6.2.1/type_traits:1231:12:   required from ‘struct std::__is_nothrow_move_constructible_impl<std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >, true>’
/usr/include/c++/6.2.1/type_traits:1237:12:   required from ‘struct std::is_nothrow_move_constructible<std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > > >’
/usr/include/c++/6.2.1/type_traits:143:12:   required from ‘struct std::__and_<std::is_nothrow_move_constructible<void (*)(entity_component_system::database::IDataBase&)>, std::is_nothrow_move_constructible<std::_Tuple_impl<1ul, entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > > > >’
/usr/include/c++/6.2.1/tuple:218:7:   required from ‘constexpr std::_Tuple_impl<_Idx, _Head, _Tail ...>::_Tuple_impl(std::_Tuple_impl<_Idx, _Head, _Tail ...>&&) [with long unsigned int _Idx = 0ul; _Head = void (*)(entity_component_system::database::IDataBase&); _Tail = {entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >}]’
/usr/include/c++/6.2.1/functional:1428:41:   required from ‘typename std::_Bind_simple_helper<_Func, _BoundArgs>::__type std::__bind_simple(_Callable&&, _Args&& ...) [with _Callable = void (&)(entity_component_system::database::IDataBase&); _Args = {entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >&}; typename std::_Bind_simple_helper<_Func, _BoundArgs>::__type = std::_Bind_simple<void (*(entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >))(entity_component_system::database::IDataBase&)>]’
/usr/include/c++/6.2.1/thread:137:26:   required from ‘std::thread::thread(_Callable&&, _Args&& ...) [with _Callable = void (&)(entity_component_system::database::IDataBase&); _Args = {entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >&}]’
main.cpp:29:36:   required from here
/usr/include/c++/6.2.1/tuple:115:42: error: use of deleted function ‘entity_component_system::database::DataBase<ComponentTypes>::DataBase(entity_component_system::database::DataBase<ComponentTypes>&&) [with ComponentTypes = entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > >]’
  : _M_head_impl(std::forward<_UHead>(__h)) { }
                                          ^
In file included from main.cpp:6:0:
../../inc/shared/DataBase.hpp:46:7: note: declared here
       DataBase(DataBase &&) = delete;
       ^~~~~~~~
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional: In instantiation of ‘std::_Bind_simple<_Callable(_Args ...)>::_Bind_simple(_Tp&&, _Up&& ...) [with _Tp = void (*)(entity_component_system::database::IDataBase&); _Up = {entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >&}; _Callable = void (*)(entity_component_system::database::IDataBase&); _Args = {entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >}]’:
/usr/include/c++/6.2.1/functional:1426:14:   required from ‘typename std::_Bind_simple_helper<_Func, _BoundArgs>::__type std::__bind_simple(_Callable&&, _Args&& ...) [with _Callable = void (&)(entity_component_system::database::IDataBase&); _Args = {entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >&}; typename std::_Bind_simple_helper<_Func, _BoundArgs>::__type = std::_Bind_simple<void (*(entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >))(entity_component_system::database::IDataBase&)>]’
/usr/include/c++/6.2.1/thread:137:26:   required from ‘std::thread::thread(_Callable&&, _Args&& ...) [with _Callable = void (&)(entity_component_system::database::IDataBase&); _Args = {entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >&}]’
main.cpp:29:36:   required from here
/usr/include/c++/6.2.1/functional:1379:72: error: no matching function for call to ‘std::tuple<void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::tuple(void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1158:18: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && (! _ImplicitlyMoveConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::pair<_U1, _U2>&&)
         explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
                  ^~~~~
/usr/include/c++/6.2.1/tuple:1158:18: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1148:9: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && _ImplicitlyMoveConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::pair<_U1, _U2>&&)
         tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
         ^~~~~
/usr/include/c++/6.2.1/tuple:1148:9: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1138:18: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_ConstructibleTuple<_U1, _U2>() && (! _ImplicitlyConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::pair<_U1, _U2>&)
         explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
                  ^~~~~
/usr/include/c++/6.2.1/tuple:1138:18: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1128:9: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_ConstructibleTuple<_U1, _U2>() && _ImplicitlyConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::pair<_U1, _U2>&)
         tuple(allocator_arg_t __tag, const _Alloc& __a,
         ^~~~~
/usr/include/c++/6.2.1/tuple:1128:9: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1117:11: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && (! _ImplicitlyMoveConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_U1, _U2>&&)
  explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
           ^~~~~
/usr/include/c++/6.2.1/tuple:1117:11: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1107:2: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && _ImplicitlyMoveConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_U1, _U2>&&)
  tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
  ^~~~~
/usr/include/c++/6.2.1/tuple:1107:2: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1095:11: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_ConstructibleTuple<_U1, _U2>() && (! _ImplicitlyConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_U1, _U2>&)
  explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
           ^~~~~
/usr/include/c++/6.2.1/tuple:1095:11: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1083:2: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_ConstructibleTuple<_U1, _U2>() && _ImplicitlyConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_U1, _U2>&)
  tuple(allocator_arg_t __tag, const _Alloc& __a,
  ^~~~~
/usr/include/c++/6.2.1/tuple:1083:2: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1074:2: note: candidate: template<class _Alloc> std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_T1, _T2>&&)
  tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
  ^~~~~
/usr/include/c++/6.2.1/tuple:1074:2: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1070:2: note: candidate: template<class _Alloc> std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_T1, _T2>&)
  tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
  ^~~~~
/usr/include/c++/6.2.1/tuple:1070:2: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 3 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1064:11: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && (! _ImplicitlyMoveConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, _U1&&, _U2&&)
  explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
           ^~~~~
/usr/include/c++/6.2.1/tuple:1064:11: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 4 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1054:2: note: candidate: template<class _Alloc, class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && _ImplicitlyMoveConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, _U1&&, _U2&&)
  tuple(allocator_arg_t __tag, const _Alloc& __a, _U1&& __a1, _U2&& __a2)
  ^~~~~
/usr/include/c++/6.2.1/tuple:1054:2: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 4 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1044:11: note: candidate: template<class _Alloc, class _Dummy, typename std::enable_if<(std::_TC<std::is_same<_Dummy, void>::value, void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::_ConstructibleTuple<void (*)(IDataBase&), DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >() && (! std::_TC<std::is_same<_Dummy, void>::value, void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::_ImplicitlyConvertibleTuple<void (*)(IDataBase&), DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >())), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const _T1&, const _T2&)
  explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
           ^~~~~
/usr/include/c++/6.2.1/tuple:1044:11: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 4 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1032:2: note: candidate: template<class _Alloc, class _Dummy, typename std::enable_if<(std::_TC<std::is_same<_Dummy, void>::value, void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::_ConstructibleTuple<void (*)(IDataBase&), DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >() && std::_TC<std::is_same<_Dummy, void>::value, void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::_ImplicitlyConvertibleTuple<void (*)(IDataBase&), DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >()), bool>::type <anonymous> > std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&, const _T1&, const _T2&)
  tuple(allocator_arg_t __tag, const _Alloc& __a,
  ^~~~~
/usr/include/c++/6.2.1/tuple:1032:2: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 4 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1021:2: note: candidate: template<class _Alloc> std::tuple<_T1, _T2>::tuple(std::allocator_arg_t, const _Alloc&)
  tuple(allocator_arg_t __tag, const _Alloc& __a)
  ^~~~~
/usr/include/c++/6.2.1/tuple:1021:2: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   cannot convert ‘std::forward<void (*)(entity_component_system::database::IDataBase&)>((* & __f))’ (type ‘void (*)(entity_component_system::database::IDataBase&)’) to type ‘std::allocator_arg_t’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1014:28: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && (! _ImplicitlyMoveConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::pair<_U1, _U2>&&)
         explicit constexpr tuple(pair<_U1, _U2>&& __in)
                            ^~~~~
/usr/include/c++/6.2.1/tuple:1014:28: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   mismatched types ‘std::pair<_T1, _T2>’ and ‘void (*)(entity_component_system::database::IDataBase&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:1004:19: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && _ImplicitlyMoveConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::pair<_U1, _U2>&&)
         constexpr tuple(pair<_U1, _U2>&& __in)
                   ^~~~~
/usr/include/c++/6.2.1/tuple:1004:19: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   mismatched types ‘std::pair<_T1, _T2>’ and ‘void (*)(entity_component_system::database::IDataBase&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:995:28: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructibleTuple<_U1, _U2>() && (! _ImplicitlyConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const std::pair<_U1, _U2>&)
         explicit constexpr tuple(const pair<_U1, _U2>& __in)
                            ^~~~~
/usr/include/c++/6.2.1/tuple:995:28: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   mismatched types ‘const std::pair<_T1, _T2>’ and ‘void (*)(entity_component_system::database::IDataBase&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:986:19: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructibleTuple<_U1, _U2>() && _ImplicitlyConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const std::pair<_U1, _U2>&)
         constexpr tuple(const pair<_U1, _U2>& __in)
                   ^~~~~
/usr/include/c++/6.2.1/tuple:986:19: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   mismatched types ‘const std::pair<_T1, _T2>’ and ‘void (*)(entity_component_system::database::IDataBase&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:977:28: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && (! _ImplicitlyMoveConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::tuple<_U1, _U2>&&)
         explicit constexpr tuple(tuple<_U1, _U2>&& __in)
                            ^~~~~
/usr/include/c++/6.2.1/tuple:977:28: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   mismatched types ‘std::tuple<_T1, _T2>’ and ‘void (*)(entity_component_system::database::IDataBase&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:968:19: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && _ImplicitlyMoveConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(std::tuple<_U1, _U2>&&)
         constexpr tuple(tuple<_U1, _U2>&& __in)
                   ^~~~~
/usr/include/c++/6.2.1/tuple:968:19: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   mismatched types ‘std::tuple<_T1, _T2>’ and ‘void (*)(entity_component_system::database::IDataBase&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:959:28: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructibleTuple<_U1, _U2>() && (! _ImplicitlyConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const std::tuple<_U1, _U2>&)
         explicit constexpr tuple(const tuple<_U1, _U2>& __in)
                            ^~~~~
/usr/include/c++/6.2.1/tuple:959:28: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   mismatched types ‘const std::tuple<_T1, _T2>’ and ‘void (*)(entity_component_system::database::IDataBase&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:950:19: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_ConstructibleTuple<_U1, _U2>() && _ImplicitlyConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const std::tuple<_U1, _U2>&)
         constexpr tuple(const tuple<_U1, _U2>& __in)
                   ^~~~~
/usr/include/c++/6.2.1/tuple:950:19: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   mismatched types ‘const std::tuple<_T1, _T2>’ and ‘void (*)(entity_component_system::database::IDataBase&)’
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:942:17: note: candidate: constexpr std::tuple<_T1, _T2>::tuple(std::tuple<_T1, _T2>&&) [with _T1 = void (*)(entity_component_system::database::IDataBase&); _T2 = entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > >]
       constexpr tuple(tuple&&) = default;
                 ^~~~~
/usr/include/c++/6.2.1/tuple:942:17: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/6.2.1/tuple:937:28: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && (! _ImplicitlyMoveConvertibleTuple<_U1, _U2>())), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&)
         explicit constexpr tuple(_U1&& __a1, _U2&& __a2)
                            ^~~~~
/usr/include/c++/6.2.1/tuple:937:28: note:   template argument deduction/substitution failed:
/usr/include/c++/6.2.1/tuple:936:16: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  bool>::type = false>
                ^~~~~
/usr/include/c++/6.2.1/tuple:936:16: note: invalid template non-type parameter
/usr/include/c++/6.2.1/tuple:928:19: note: candidate: template<class _U1, class _U2, typename std::enable_if<(_MoveConstructibleTuple<_U1, _U2>() && _ImplicitlyMoveConvertibleTuple<_U1, _U2>()), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&)
         constexpr tuple(_U1&& __a1, _U2&& __a2)
                   ^~~~~
/usr/include/c++/6.2.1/tuple:928:19: note:   template argument deduction/substitution failed:
/usr/include/c++/6.2.1/tuple:927:16: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  bool>::type = true>
                ^~~~
/usr/include/c++/6.2.1/tuple:927:16: note: invalid template non-type parameter
/usr/include/c++/6.2.1/tuple:915:28: note: candidate: template<class _Dummy, typename std::enable_if<(std::_TC<std::is_same<_Dummy, void>::value, void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::_ConstructibleTuple<void (*)(IDataBase&), DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >() && (! std::_TC<std::is_same<_Dummy, void>::value, void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::_ImplicitlyConvertibleTuple<void (*)(IDataBase&), DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >())), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const _T1&, const _T2&)
         explicit constexpr tuple(const _T1& __a1, const _T2& __a2)
                            ^~~~~
/usr/include/c++/6.2.1/tuple:915:28: note:   template argument deduction/substitution failed:
/usr/include/c++/6.2.1/tuple:914:16: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  bool>::type = false>
                ^~~~~
/usr/include/c++/6.2.1/tuple:914:16: note: invalid template non-type parameter
/usr/include/c++/6.2.1/tuple:906:19: note: candidate: template<class _Dummy, typename std::enable_if<(std::_TC<std::is_same<_Dummy, void>::value, void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::_ConstructibleTuple<void (*)(IDataBase&), DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >() && std::_TC<std::is_same<_Dummy, void>::value, void (*)(entity_component_system::database::IDataBase&), entity_component_system::database::DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >::_ImplicitlyConvertibleTuple<void (*)(IDataBase&), DataBase<entity_component_system::database::ComponentTypes<entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)0, entity_component_system::component::Component<compile_time::TypesWrapper<entity_component_system::ID<entity_component_system::Entity> >, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)1, entity_component_system::component::Component<compile_time::TypesWrapper<short unsigned int>, ((const char*)(& value))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)2, entity_component_system::component::Component<compile_time::TypesWrapper<int, int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)3, entity_component_system::component::Component<compile_time::TypesWrapper<unsigned int, unsigned int>, ((const char*)(& x)), ((const char*)(& y))> >, entity_component_system::database::ComponentTypePair<(entity_component_system::database::ComponentTypeID)5, entity_component_system::component::Component<compile_time::TypesWrapper<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, ((const char*)(& test))> > > > >()), bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple(const _T1&, const _T2&)
         constexpr tuple(const _T1& __a1, const _T2& __a2)
                   ^~~~~
/usr/include/c++/6.2.1/tuple:906:19: note:   template argument deduction/substitution failed:
/usr/include/c++/6.2.1/tuple:905:16: error: no type named ‘type’ in ‘struct std::enable_if<false, bool>’
  bool>::type = true>
                ^~~~
/usr/include/c++/6.2.1/tuple:905:16: note: invalid template non-type parameter
/usr/include/c++/6.2.1/tuple:892:26: note: candidate: template<class _U1, class _U2, typename std::enable_if<std::__and_<std::is_default_constructible<_Tp>, std::is_default_constructible<_U2>, std::__not_<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> > > >::value, bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple()
       explicit constexpr tuple()
                          ^~~~~
/usr/include/c++/6.2.1/tuple:892:26: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 0 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
In file included from /usr/include/c++/6.2.1/functional:55:0,
                 from /usr/include/c++/6.2.1/thread:39,
                 from main.cpp:1:
/usr/include/c++/6.2.1/tuple:878:17: note: candidate: template<class _U1, class _U2, typename std::enable_if<std::__and_<std::__is_implicitly_default_constructible<_U1>, std::__is_implicitly_default_constructible<_U2> >::value, bool>::type <anonymous> > constexpr std::tuple<_T1, _T2>::tuple()
       constexpr tuple()
                 ^~~~~
/usr/include/c++/6.2.1/tuple:878:17: note:   template argument deduction/substitution failed:
In file included from /usr/include/c++/6.2.1/thread:39:0,
                 from main.cpp:1:
/usr/include/c++/6.2.1/functional:1379:72: note:   candidate expects 0 arguments, 2 provided
         : _M_bound(std::forward<_Tp>(__f), std::forward<_Up>(__args)...)
                                                                        ^
